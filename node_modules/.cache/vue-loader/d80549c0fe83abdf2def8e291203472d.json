{"remainingRequest":"/home/aaa/htdoc/vue.js-test/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/aaa/htdoc/vue.js-test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/aaa/htdoc/vue.js-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/aaa/htdoc/vue.js-test/src/views/Star.vue?vue&type=template&id=24137ee8&scoped=true&","dependencies":[{"path":"/home/aaa/htdoc/vue.js-test/src/views/Star.vue","mtime":1593767987875},{"path":"/home/aaa/htdoc/vue.js-test/node_modules/cache-loader/dist/cjs.js","mtime":1593755504329},{"path":"/home/aaa/htdoc/vue.js-test/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1593755507197},{"path":"/home/aaa/htdoc/vue.js-test/node_modules/cache-loader/dist/cjs.js","mtime":1593755504329},{"path":"/home/aaa/htdoc/vue.js-test/node_modules/vue-loader/lib/index.js","mtime":1593755507197}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}